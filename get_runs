#!/bin/bash
set -e
s(){
  STATUS=$1
  RUN=$2
  DIR=$ORG/$REPO/$STATUS/$RUN
  mkdir -p $DIR

  if [ ! -s $DIR/usage.json ]; then
    curl -s -S -L \
     -H "Accept: application/vnd.github+json" \
     -H "Authorization: Bearer $GITHUB_TOKEN"\
     -H "X-GitHub-Api-Version: 2022-11-28" \
     -o $DIR/usage.json \
     "https://api.github.com/repos/$ORG/$REPO/actions/runs/$RUN/timing"
    sleep 2
  fi
}

f(){
  FILE=$ORG-$REPO-$3.json
  if [ ! -s cache/$FILE ]; then
    curl -s -S -L \
     -H "Accept: application/vnd.github+json" \
     -H "Authorization: Bearer $GITHUB_TOKEN"\
     -H "X-GitHub-Api-Version: 2022-11-28" \
     -o cache/$FILE \
     "https://api.github.com/repos/$ORG/$REPO/actions/runs?status=$3&per_page=100"
    sleep 2
  fi
}

if (($# < 2)); then
  echo usage: $0 ORG REPO
else
  export ORG=$1
  export REPO=$2
  echo -n "$ORG $REPO "
  f $ORG $REPO failure

  jq . < cache/$ORG-$REPO-failure.json |grep '^      "id": ' |awk '{print $2}'|sed -e 's/,//' |\
  while read run; do
    s failure $run
    echo -n f
  done
  f $ORG $REPO cancelled

  echo -n .
  jq . < cache/$ORG-$REPO-cancelled.json |grep '^      "id": ' |awk '{print $2}'|sed -e 's/,//' |\
  while read run; do
    echo -n c
    s cancelled $run
  done
  echo -n .

  f $ORG $REPO success
  echo -n .

  jq . < cache/$ORG-$REPO-success.json |grep '^      "id": ' |awk '{print $2}'|sed -e 's/,//' |\
  while read run; do
    echo -n s
    s success $run
  done
  echo .
#  rm cache/$ORG-$REPO-success.json cache/$ORG-$REPO-failure.json cache/$ORG-$REPO-cancelled.json
fi

